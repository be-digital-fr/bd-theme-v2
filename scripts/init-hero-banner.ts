import { createClient } from '@sanity/client';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config({ path: '.env.local' });

const client = createClient({
  projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID!,
  dataset: process.env.NEXT_PUBLIC_SANITY_DATASET!,
  apiVersion: process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-07-05',
  token: process.env.SANITY_API_TOKEN!,
  useCdn: false,
});

const defaultHeroBanner = {
  isActive: true,
  heroTitle: {
    fr: 'Savourez nos burgers uniques',
    en: 'Taste our unique burgers',
    es: 'Saborea nuestras hamburguesas √∫nicas',
    de: 'Probieren Sie unsere einzigartigen Burger'
  },
  heroDescription: {
    fr: 'Des recettes fra√Æches, gourmandes et pr√©par√©es avec des ingr√©dients de qualit√© pour une exp√©rience gustative exceptionnelle',
    en: 'Fresh, delicious recipes prepared with quality ingredients for an exceptional taste experience',
    es: 'Recetas frescas y deliciosas preparadas con ingredientes de calidad para una experiencia gastron√≥mica excepcional',
    de: 'Frische, k√∂stliche Rezepte mit hochwertigen Zutaten f√ºr ein au√üergew√∂hnliches Geschmackserlebnis'
  },
  primaryButton: {
    text: {
      fr: 'Commander maintenant',
      en: 'Order now',
      es: 'Pedir ahora',
      de: 'Jetzt bestellen'
    },
    url: '/order'
  },
  secondaryButton: {
    text: {
      fr: 'Voir le menu',
      en: 'View menu',
      es: 'Ver men√∫',
      de: 'Men√º ansehen'
    },
    url: '/menu'
  },
  heroImage: {
    desktop: '/images/banner/burger-desktop.png',
    mobile: '/images/banner/burger-mobile.png',
    alt: {
      fr: 'D√©licieux burger avec des ingr√©dients frais',
      en: 'Delicious burger with fresh ingredients',
      es: 'Deliciosa hamburguesa con ingredientes frescos',
      de: 'K√∂stlicher Burger mit frischen Zutaten'
    }
  }
};

async function initHeroBanner() {
  try {
    console.log('üöÄ Initialisation de la banni√®re hero...');

    // Chercher le document homeWithAutoTranslate existant
    const existingDoc = await client.fetch(`*[_type == "home"][0]`);

    if (existingDoc) {
      console.log('üìÑ Document trouv√©, mise √† jour de la banni√®re...');
      
      // Mettre √† jour seulement si heroBanner n'existe pas ou est vide
      if (!existingDoc.heroBanner || Object.keys(existingDoc.heroBanner).length === 0) {
        await client
          .patch(existingDoc._id)
          .set({ heroBanner: defaultHeroBanner })
          .commit();
        
        console.log('‚úÖ Banni√®re hero ajout√©e avec succ√®s!');
      } else {
        console.log('‚ÑπÔ∏è La banni√®re hero existe d√©j√†');
      }
    } else {
      console.log('üìù Cr√©ation du document avec la banni√®re...');
      
      // Cr√©er un nouveau document avec la banni√®re
      await client.create({
        _type: 'home',
        title: {
          fr: 'Bienvenue',
          en: 'Welcome',
          es: 'Bienvenido',
          de: 'Willkommen'
        },
        subtitle: {
          fr: 'D√©couvrez notre cuisine',
          en: 'Discover our cuisine',
          es: 'Descubre nuestra cocina',
          de: 'Entdecken Sie unsere K√ºche'
        },
        heroBanner: defaultHeroBanner
      });
      
      console.log('‚úÖ Document cr√©√© avec la banni√®re hero!');
    }

  } catch (error) {
    console.error('‚ùå Erreur:', error);
    process.exit(1);
  }
}

initHeroBanner();